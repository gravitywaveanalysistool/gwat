name: Build GWAT
on: [push]
jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Get Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'
      - name: Install GDL
        run: sudo apt install gnudatalanguage
      - name: Install PIP Dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - name: Test GWAT
        run: python -m unittest discover tests -v
  build:
    needs: test
    name: Build GWAT to executable
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        include:
          - os: ubuntu-latest
            target: Linux
            build_cmd: pyinstaller -D src/__init__.py -n gwat -p src/ --copy-metadata numpy --hidden-import='PIL._tkinter_finder' --add-data pro/:pro/ --add-data data/:data/
            zip_cmd: cd dist/gwat/ && tar -czvf gwat-linux.tar.gz * && cd ../..
            filename: dist/gwat/gwat-linux.tar.gz
          - os: macos-latest
            target: MacOS
            build_cmd: pyinstaller -D -w src/__init__.py -n gwat -p src/ --copy-metadata numpy --hidden-import='PIL._tkinter_finder' -i data/media/logo_notext_icon.ico --add-data pro/:pro/ --add-data data/:data/
            zip_cmd: cd dist/gwat/ && zip -r9 gwat-macos * && cd ../..
            filename: dist/gwat/gwat-macos.zip
          - os: windows-latest
            target: Windows
            build_cmd: pyinstaller -D -w src/__init__.py -n gwat -p src/ --copy-metadata numpy --hidden-import='PIL._tkinter_finder' -i data/media/logo_notext_icon.ico --add-data pro/:pro/ --add-data data/:data/
            zip_cmd: Compress-Archive -DestinationPath gwat-windows -Path dist/gwat/*
            filename: gwat-windows.zip
    steps:
      - uses: actions/checkout@v4
      - name: Get Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11
          cache: 'pip'
      - name: Install Dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
      - name: Build for ${{ matrix.target }}
        run: ${{ matrix.build_cmd }}
      - name: Display outputs
        run: ls dist/gwat
      - name: Compress output
        run: ${{ matrix.zip_cmd }}
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: gwat-${{ matrix.os }}
          path: ${{ matrix.filename }}
          overwrite: true
      - name: Upload Release
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{ matrix.filename }}
          prerelease: true
          replacesArtifacts: true
          commit: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: latest
        